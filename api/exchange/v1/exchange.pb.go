// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: exchange/v1/exchange.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SymbolsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolsReply) Reset() {
	*x = SymbolsReply{}
	mi := &file_exchange_v1_exchange_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsReply) ProtoMessage() {}

func (x *SymbolsReply) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_v1_exchange_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsReply.ProtoReflect.Descriptor instead.
func (*SymbolsReply) Descriptor() ([]byte, []int) {
	return file_exchange_v1_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *SymbolsReply) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type KlineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	EndTime       int64                  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KlineRequest) Reset() {
	*x = KlineRequest{}
	mi := &file_exchange_v1_exchange_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlineRequest) ProtoMessage() {}

func (x *KlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_v1_exchange_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlineRequest.ProtoReflect.Descriptor instead.
func (*KlineRequest) Descriptor() ([]byte, []int) {
	return file_exchange_v1_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *KlineRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *KlineRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *KlineRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *KlineRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type KlineReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KlineData     []*KlineData           `protobuf:"bytes,1,rep,name=kline_data,json=klineData,proto3" json:"kline_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KlineReply) Reset() {
	*x = KlineReply{}
	mi := &file_exchange_v1_exchange_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlineReply) ProtoMessage() {}

func (x *KlineReply) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_v1_exchange_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlineReply.ProtoReflect.Descriptor instead.
func (*KlineReply) Descriptor() ([]byte, []int) {
	return file_exchange_v1_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *KlineReply) GetKlineData() []*KlineData {
	if x != nil {
		return x.KlineData
	}
	return nil
}

type KlineData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          int64                  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Open          string                 `protobuf:"bytes,2,opt,name=open,proto3" json:"open,omitempty"`
	High          string                 `protobuf:"bytes,3,opt,name=high,proto3" json:"high,omitempty"`
	Low           string                 `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	Close         string                 `protobuf:"bytes,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume        string                 `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	QuoteVolume   string                 `protobuf:"bytes,7,opt,name=quote_volume,json=quoteVolume,proto3" json:"quote_volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KlineData) Reset() {
	*x = KlineData{}
	mi := &file_exchange_v1_exchange_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlineData) ProtoMessage() {}

func (x *KlineData) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_v1_exchange_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlineData.ProtoReflect.Descriptor instead.
func (*KlineData) Descriptor() ([]byte, []int) {
	return file_exchange_v1_exchange_proto_rawDescGZIP(), []int{3}
}

func (x *KlineData) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *KlineData) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *KlineData) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *KlineData) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *KlineData) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *KlineData) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *KlineData) GetQuoteVolume() string {
	if x != nil {
		return x.QuoteVolume
	}
	return ""
}

type SymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolRequest) Reset() {
	*x = SymbolRequest{}
	mi := &file_exchange_v1_exchange_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRequest) ProtoMessage() {}

func (x *SymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_v1_exchange_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRequest.ProtoReflect.Descriptor instead.
func (*SymbolRequest) Descriptor() ([]byte, []int) {
	return file_exchange_v1_exchange_proto_rawDescGZIP(), []int{4}
}

func (x *SymbolRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SymbolReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ExchangeProducts []string               `protobuf:"bytes,1,rep,name=exchange_products,json=exchangeProducts,proto3" json:"exchange_products,omitempty"`
	TickerSize       string                 `protobuf:"bytes,2,opt,name=ticker_size,json=tickerSize,proto3" json:"ticker_size,omitempty"`
	QuoteVolume_24H  string                 `protobuf:"bytes,3,opt,name=quote_volume_24h,json=quoteVolume24h,proto3" json:"quote_volume_24h,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SymbolReply) Reset() {
	*x = SymbolReply{}
	mi := &file_exchange_v1_exchange_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolReply) ProtoMessage() {}

func (x *SymbolReply) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_v1_exchange_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolReply.ProtoReflect.Descriptor instead.
func (*SymbolReply) Descriptor() ([]byte, []int) {
	return file_exchange_v1_exchange_proto_rawDescGZIP(), []int{5}
}

func (x *SymbolReply) GetExchangeProducts() []string {
	if x != nil {
		return x.ExchangeProducts
	}
	return nil
}

func (x *SymbolReply) GetTickerSize() string {
	if x != nil {
		return x.TickerSize
	}
	return ""
}

func (x *SymbolReply) GetQuoteVolume_24H() string {
	if x != nil {
		return x.QuoteVolume_24H
	}
	return ""
}

var File_exchange_v1_exchange_proto protoreflect.FileDescriptor

var file_exchange_v1_exchange_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x22, 0x73, 0x0a, 0x0c, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x43, 0x0a, 0x0a, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x0a, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x01, 0x0a, 0x09, 0x4b,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x85, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2b, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x32,
	0x34, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x32, 0x34, 0x68, 0x32, 0xce, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x69, 0x63, 0x68, 0x46, 0x61, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x72, 0x66, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_exchange_v1_exchange_proto_rawDescOnce sync.Once
	file_exchange_v1_exchange_proto_rawDescData []byte
)

func file_exchange_v1_exchange_proto_rawDescGZIP() []byte {
	file_exchange_v1_exchange_proto_rawDescOnce.Do(func() {
		file_exchange_v1_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exchange_v1_exchange_proto_rawDesc), len(file_exchange_v1_exchange_proto_rawDesc)))
	})
	return file_exchange_v1_exchange_proto_rawDescData
}

var file_exchange_v1_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_exchange_v1_exchange_proto_goTypes = []any{
	(*SymbolsReply)(nil),  // 0: exchange.v1.SymbolsReply
	(*KlineRequest)(nil),  // 1: exchange.v1.KlineRequest
	(*KlineReply)(nil),    // 2: exchange.v1.KlineReply
	(*KlineData)(nil),     // 3: exchange.v1.KlineData
	(*SymbolRequest)(nil), // 4: exchange.v1.SymbolRequest
	(*SymbolReply)(nil),   // 5: exchange.v1.SymbolReply
	(*emptypb.Empty)(nil), // 6: google.protobuf.Empty
}
var file_exchange_v1_exchange_proto_depIdxs = []int32{
	3, // 0: exchange.v1.KlineReply.kline_data:type_name -> exchange.v1.KlineData
	6, // 1: exchange.v1.Exchange.GetSymbols:input_type -> google.protobuf.Empty
	1, // 2: exchange.v1.Exchange.GetKline:input_type -> exchange.v1.KlineRequest
	4, // 3: exchange.v1.Exchange.GetSymbol:input_type -> exchange.v1.SymbolRequest
	0, // 4: exchange.v1.Exchange.GetSymbols:output_type -> exchange.v1.SymbolsReply
	2, // 5: exchange.v1.Exchange.GetKline:output_type -> exchange.v1.KlineReply
	5, // 6: exchange.v1.Exchange.GetSymbol:output_type -> exchange.v1.SymbolReply
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_exchange_v1_exchange_proto_init() }
func file_exchange_v1_exchange_proto_init() {
	if File_exchange_v1_exchange_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exchange_v1_exchange_proto_rawDesc), len(file_exchange_v1_exchange_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exchange_v1_exchange_proto_goTypes,
		DependencyIndexes: file_exchange_v1_exchange_proto_depIdxs,
		MessageInfos:      file_exchange_v1_exchange_proto_msgTypes,
	}.Build()
	File_exchange_v1_exchange_proto = out.File
	file_exchange_v1_exchange_proto_goTypes = nil
	file_exchange_v1_exchange_proto_depIdxs = nil
}
